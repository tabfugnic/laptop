#!/usr/bin/env bash

set -e

catch_error() {
  ret=$?
  exec 1<&3 2<&4
  if [[ $ret -ne 0 ]]; then
     error_echo "failed" >&2
     tail -n50 ./logfile.txt >&2
  fi
  cleanup
  exit $ret
}

cleanup() {
  rm ./logfile.txt
}

finalize() {
  fancy_echo "Cleaning up and rebooting"
  cleanup
  sudo apt clean
  sudo apt autoclean
  sudo apt autoremove
  sudo reboot || true
}

consistent_echo() {
  string=$1
  string_length=$(echo $string | wc -m)
  space_character_length=$((($MAX_ECHO_LENGTH - $string_length) / 2))
  filler=$(printf -v dash '%*s' $space_character_length ''; printf '%s' ${dash// /$SPACE_CHARACTER})

  echo $filler$string$filler
}

fancy_echo() {
  string=$(consistent_echo "$1")
  printf "\n\e[32m$string\e[0m\n"
}

error_echo() {
  string=$(consistent_echo "$1")
  printf "\n\e[31m$string\e[0m\n"
}

terminal_width() {
  if [ -z "$TERM" ]; then
    tput cols
  else
    echo 50
  fi
}

capture_output() {
  if [ -z "$VERBOSE" ]; then
    exec 3<&1 4<&2
    $@ 1> ./logfile.txt 2>&1
  else
    $@
  fi
}

run_build() {
  local build_file=$1

  while read config; do
    fancy_echo "Running configuration for '$config'"
    source $BUILDS_DIRECTORY/$config
    cd $WORKING_DIRECTORY
  done < "$build_file"
}

trap catch_error EXIT

WORKING_DIRECTORY=`pwd`
SUPPORT_DIRECTORY=$WORKING_DIRECTORY/support
BUILDS_DIRECTORY=$WORKING_DIRECTORY/builds
MAX_ECHO_LENGTH=$(terminal_width)
SPACE_CHARACTER="-"

machine_type=laptop
if [[ ! -z "$1" && "$1" != -* ]]; then
  machine_type=$1
  OPTIND=2
fi

while getopts "z" options; do
  case $options in
    z)
      VERBOSE=true
      ;;
  esac
done

fancy_echo "Running system install of $machine_type for $(id)"

fancy_echo "Checking system before installation"
run_build "$SUPPORT_DIRECTORY/required.build"

fancy_echo "Installing required setup packages"
capture_output < "$SUPPORT_DIRECTORY/base.packages" xargs sudo apt -y install

fancy_echo "Running setup build"
run_build "$SUPPORT_DIRECTORY/setup.build"

sudo apt update
capture_output < "$SUPPORT_DIRECTORY/$machine_type.packages" xargs sudo apt -y install

run_build "$SUPPORT_DIRECTORY/$machine_type.build"

fancy_echo "Add users to $machine_type groups"
capture_output "sudo usermod -aG $(paste -sd ',' $SUPPORT_DIRECTORY/$machine_type.groups) $USER"

finalize
